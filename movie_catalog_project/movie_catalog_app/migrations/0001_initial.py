# Generated by Django 5.0.3 on 2024-03-18 12:46

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MovieCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='name')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=10000, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_categories', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'movie category',
                'verbose_name_plural': 'movie categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='name')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=10000, null=True)),
                ('length', models.TimeField(blank=True, verbose_name='length')),
                ('movie_year', models.IntegerField(blank=True, verbose_name='movie year')),
                ('genre', models.CharField(blank=True, max_length=100, verbose_name='genre')),
                ('director', models.CharField(blank=True, max_length=200, verbose_name='director')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='video/', verbose_name='video file')),
                ('video_image', models.ImageField(blank=True, null=True, upload_to='video_img/', verbose_name='video picture')),
                ('youtube_video_hash', models.CharField(blank=True, help_text="from Youtube's video URL copy the part after 'https://www.youtube.com/watch?v='.", max_length=50, null=True, verbose_name='YouTube video hash')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movies', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movies', to='movie_catalog_app.moviecategory', verbose_name='category')),
            ],
            options={
                'verbose_name': 'movie',
                'verbose_name_plural': 'movies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MovieLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_type', models.IntegerField(choices=[(0, '&#x2764;&#xfe0f;'), (1, '&#128163;'), (2, '&#128293;'), (3, '&#128077;'), (4, '&#128405;'), (5, '&#128078;')], default=3, verbose_name='type')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='movie_catalog_app.movie', verbose_name='movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_likes', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'movie like',
                'verbose_name_plural': 'movie likes',
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='name')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=10000, null=True)),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('year_start', models.IntegerField(blank=True, verbose_name='year start')),
                ('year_end', models.IntegerField(blank=True, verbose_name='year end')),
                ('founder', models.CharField(blank=True, max_length=100, verbose_name='founder')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studios', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'studio',
                'verbose_name_plural': 'studios',
                'ordering': ['name', 'year_start', 'year_end'],
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='studio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movies', to='movie_catalog_app.studio', verbose_name='studio'),
        ),
        migrations.CreateModel(
            name='StudioLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_type', models.IntegerField(choices=[(0, '&#x2764;&#xfe0f;'), (1, '&#128163;'), (2, '&#128293;'), (3, '&#128077;'), (4, '&#128405;'), (5, '&#128078;')], default=3, verbose_name='type')),
                ('studio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='movie_catalog_app.studio', verbose_name='studio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studio_likes', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'studio like',
                'verbose_name_plural': 'studio likes',
            },
        ),
    ]
